<div class="container-responsive">
	<div class="row">
		<div class="col-xs-12 col-md-8">
			<div class="sigma-parent" id="sigma-example-parent">
				<div class="sigma-expand" id="sigma-example"></div>
			</div>
		</div>
		<div class="col-xs-6 col-md-4" id="status" style="background:#eee">
			<h1>Status</h1>
			<h1>username</h1>
			<button>Facebook Login</button>
			<h1>Point</h1>
			<button id="independance">Independance</button>
			<button id="betray">Betray</button>
			<button id="seize">Seize</button>
			<h1>friend list</h1>
			<ul>
				<li>asdfas</li>
				<li>sadf</li>
				<li>asfdasd</li>
				<li>-more-</li>
			</ul>
		</div>
	</div>
	<div id="dialog">
		<div class="row-fluid">
			<div class="span10">
				<span id="dialog_title">title</span>
			</div>
			<div class="span2">
				<a href="#" onclick='$("#dialog").hide()'>X</a><br>
			</div>
		</div>
		<div class="row-fluid">
			<div class="span6">
				<img id="dialog_image" src="">
			</div>
			<div class="span6">
				<h1><span id="dialog_username">Username</span></h1>
				<h1><span id="dialog_banner">Banner</span></h1>
				<h1><span id="dialog_point">Point</span></h1>
			</div>
		</div>
		<div id="dialog_button" class="row-fluid">
		</div>
	</div>

	<script type="text/javascript">
		var node_id = null;
		var nodes = null;
		var groups = null;
		var function_type = null; //type : null, betray, seize

		const BETRAY = 1;
		const SEIZE = 2;

		$(function(){
			groups = <%=@groups%>;
			console.log(groups);
			$("#dialog").hide();


			//node click event
			$("#sigma-example-parent").bind("mouseup",function(){
				if(nodes != null){
					if(function_type == BETRAY){
						$.ajax({
							url: "/map/user.json",
							type: "POST",
							data: {
								user_id: node_id // if user_id == 0 then get session user
							},
							success: function(user) {
								$("#dialog_title").text("Betray");
								$("#dialog_name").text(user.username);
								$("#dialog_banner").text(user.banner);
								$("#dialog_point").text(user.point);
								$("#dialog_image").attr("src",user.picture);
							}
						});

						html = '<h3>Do you want move to this node?</h3>' +
									 '<button onclick="dialog_yes("betray")">Yes</button>' +
									 '<button onclick="dialog_no("betray")">No</button>';
						$("#dialog_button").html(html)
						$("#dialog").show();
					}else if(function_type == SEIZE){
						$.ajax({
							url: "/map/user.json",
							type: "POST",
							data: {
								user_id: node_id // if user_id == 0 then get session user
							},
							success: function(user) {
								$("#dialog_title").text("Seize");
								$("#dialog_name").text(user.username);
								$("#dialog_banner").text(user.banner);
								$("#dialog_point").text(user.point);
								$("#dialog_image").attr("src",user.picture);
							}
						});

						html = '<h3>Do you want seize this node?</h3>' +
									 '<button onclick="dialog_yes("seize")">Yes</button>' +
									 '<button onclick="dialog_no("seize")">No</button>';
						$("#dialog_button").html(html)
						$("#dialog").show();
					}
				}
			});

			$("#independance").click(function(){
				$.ajax({
					url: "/map/user.json",
					type: "POST",
					data: {
						user_id: 0 // if user_id == 0 then get session user
					},
					success: function(user) {
						$("#dialog_title").text("Independance");
						$("#dialog_name").text(user.username);
						$("#dialog_banner").text(user.banner);
						$("#dialog_point").text(user.point);
						$("#dialog_image").attr("src",user.picture);
					}
				});

				html = '<h3>Do you want independance?</h3>' +
							 '<button onclick="dialog_yes("indepandance")">Yes</button>' +
							 '<button onclick="dialog_no("indepandance")">No</button>';
				$("#dialog_button").html(html)
				$("#dialog").show();
			});

			$("#betray").click(function(){
				function_type = BETRAY;
				alert("select node")
			});
			$("#seize").click(function(){
				function_type = SEIZE;
				alert("select node")
			});

		});
		function init() {
			// Instanciate sigma.js and customize rendering :
			var sigInst = sigma.init(document.getElementById('sigma-example')).drawingProperties({
				defaultLabelColor: '#000',
				defaultLabelSize: 14,
				defaultLabelBGColor: '#fff',
				defaultLabelHoverColor: '#000',
				labelThreshold: 10,
				defaultEdgeType: 'curve'
				}).graphProperties({
				minNodeSize: 0.5,
				maxNodeSize: 10,
				minEdgeSize: 1,
				maxEdgeSize: 1
				}).mouseProperties({
				maxRatio: 4
				});

			// Parse a GEXF encoded file to fill the graph
			// (requires "sigma.parseGexf.js" to be included)
			sigInst.parseGexf('map/data.gexf');
			console.log(sigInst);

			// Bind events :
			sigInst.bind('overnodes',function(event){
				var neighbors = {};
				var index = null;
				node_id = parseInt(event.content[0])
				for(i=0;i<groups.length;i++){
					if(groups[i].indexOf(node_id)>=0){
						index = i;
						break;
					}
				}

				if(index == null)
					nodes = [];
				else
					nodes = groups[index];

				sigInst.iterEdges(function(e){
					if(nodes.indexOf(parseInt(e.source))>=0 || nodes.indexOf(parseInt(e.target))>=0){
						neighbors[e.source] = 1;
						neighbors[e.target] = 1;
						console.log(e.source)
					}
				}).iterNodes(function(n){
					if(!neighbors[n.id] && n.id != nodes ){
					//Edit by susang
						n.hidden = 0;
						n.color = change_alpha(n.color, "0.1")
					}else{
						n.hidden = 0;
					}
			}).draw(2,2,2);
			}).bind('outnodes',function(){
					sigInst.iterEdges(function(e){
					e.hidden = 0;
				}).iterNodes(function(n){
					//Edit by susang
					n.hidden = 0;
					n.color = change_alpha(n.color, "1.0")
				}).draw(2,2,2);
				nodes = null
			})
			// Draw the graph :
			sigInst.draw();
		}

		if (document.addEventListener) {
			document.addEventListener("DOMContentLoaded", init, false);
		} else {
			window.onload = init;
		}
	//chage rbga alpha
	function change_alpha(color_string, a_value){
		var c = color_string.toString()
			var str = c.substr(0, c.length-5) + "," + a_value + ")"
			return str

	}
	function dialog_yes(function_type){
		$.ajax({
			url: "/map/"+function_type,
			type: "POST",
			data: {
				user_id: node_id // if user_id == 0 then get session user
			},
			success: function(data) {
				alert(function_type +" complete");
				location.reload(true);

			}
		});
	}

	function dialog_no(function_type){
		$("#dialog").hide();
	}
</script>

<style type="text/css">
	/* sigma.js context : */
	.sigma-parent {
		position: relative;
		border-radius: 4px;
		-moz-border-radius: 4px;
		-webkit-border-radius: 4px;
		background: #222;
		height: 600px;
	}
	.sigma-expand {
		position: absolute;
		width: 100%;
		height: 100%;
		top: 0;
		left: 0;
	}
	.buttons-container{
		padding-bottom: 8px;
		padding-top: 12px;
	}
	#dialog{
		position: absolute;
		left: 50px;
		top: 50px;
		width: 300px;
		height: 300px;
		background-color:blue;
	}
</style>

